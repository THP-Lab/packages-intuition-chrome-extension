# Main pagination query
query GetAtoms(
  $limit: Int
  $offset: Int
  $orderBy: [atoms_order_by!]
  $where: atoms_bool_exp
) {
  total: atoms_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  atoms(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    ...AtomMetadata
    ...AtomTxn
    ...AtomVaultDetails
    ...AtomTriple
    creator {
      ...AccountMetadata
    }
  }
}

query GetAtomsWithPositions(
  $limit: Int
  $offset: Int
  $orderBy: [atoms_order_by!]
  $where: atoms_bool_exp
  $address: String
) {
  total: atoms_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  atoms(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    ...AtomMetadata
    ...AtomTxn
    term {
      vaults(where: { curve_id: { _eq: "1" } }) {
        position_count
        total_shares
        current_share_price
        total: positions_aggregate {
          aggregate {
            count
            sum {
              shares
            }
          }
        }
        positions(where: { account_id: { _eq: $address } }) {
          id
          account {
            label
            id
          }
          shares
        }
      }
    }
    creator {
      ...AccountMetadata
    }
    as_subject_triples_aggregate {
      nodes {
        predicate {
          label
          term_id
        }
        object {
          label
          term_id
        }
      }
    }
  }
}

# Combined query with aggregates and nodes
query GetAtomsWithAggregates(
  $limit: Int
  $offset: Int
  $orderBy: [atoms_order_by!]
  $where: atoms_bool_exp
) {
  atoms_aggregate(
    limit: $limit
    offset: $offset
    order_by: $orderBy
    where: $where
  ) {
    aggregate {
      count
    }
    nodes {
      ...AtomMetadata
      ...AtomTxn
      ...AtomVaultDetails
      creator {
        ...AccountMetadata
      }
    }
  }
}

query GetAtomsCount($where: atoms_bool_exp) {
  atoms_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetAtom($term_id: numeric!) {
  atom(term_id: $term_id) {
    ...AtomMetadata
    ...AtomTxn
    ...AtomVaultDetails
    creator {
      ...AccountMetadata
    }
    ...AtomTriple 
  }
}

query GetAtomByData($data: String!) {
  atoms(where: { data: { _eq: $data } }) {
    ...AtomMetadata
    ...AtomTxn
    ...AtomVaultDetails
    creator {
      ...AccountMetadata
    }
    ...AtomTriple
  }
}

# App specific queries
query GetVerifiedAtomDetails($term_id: numeric!, $userPositionAddress: String!) {
  atom(term_id: $term_id) {
    term_id
    label
    wallet_id
    image
    type
    block_timestamp
    data
    creator {
      id
    }
    value {
      thing {
        name
        description
        url
      }
    }
    term {
      vaults(where: { curve_id: { _eq: "1" }, term_id: { _eq: $term_id } }) {
        current_share_price
        total_shares
        position_count
        userPosition: positions(
          limit: 1
          where: { account_id: { _eq: $userPositionAddress } }
        ) {
          shares
          account_id
        }
      }
    }
    tags: as_subject_triples_aggregate(where: { predicate_id: { _in: [3] } }) {
      nodes {
        object {
          label
          term {
            vaults(where: { curve_id: { _eq: "1" }, term_id: { _eq: $id } }) {
              term_id
            }
          }
        }
        predicate_id
      }
      aggregate {
        count
      }
    }
    verificationTriple: as_subject_triples_aggregate(
      where: { predicate_id: { _eq: "4" }, object_id: { _eq: "126451" } }
    ) {
      nodes {
        term_id
        predicate_id
        object_id
        term {
          vaults(where: { curve_id: { _eq: "1" } }) {
            term_id
            positions(
              where: {
                account_id: {
                  _in: [
                    "0xd99811847e634d33f0dace483c52949bec76300f"
                    "0xbb285b543c96c927fc320fb28524899c2c90806c"
                    "0x0b162525c5dc8c18f771e60fd296913030bfe42c"
                    "0xbd2de08af9470c87c4475117fb912b8f1d588d9c"
                    "0xb95ca3d3144e9d1daff0ee3d35a4488a4a5c9fc5"
                  ]
                }
              }
            ) {
              id
              shares
              account_id
              account {
                id
              }
            }
          }
        }
      }
    }
  }
}

query GetAtomDetails($term_id: numeric!, $userPositionAddress: String!) {
  atom(term_id: $term_id) {
    term_id
    label
    wallet_id
    image
    type
    block_timestamp
    data
    creator {
      id
    }
    value {
      thing {
        name
        description
        url
      }
    }
    term {
      vaults(where: { curve_id: { _eq: "1" }, term_id: { _eq: $id } }) {
        current_share_price
        total_shares
        position_count
        userPosition: positions(
          limit: 1
          where: { account_id: { _eq: $userPositionAddress } }
        ) {
          shares
          account_id
        }
      }
    }
    tags: as_subject_triples_aggregate(where: { predicate_id: { _in: [3] } }) {
      nodes {
        object {
          label
          term {
            vaults(where: { curve_id: { _eq: "1" }, term_id: { _eq: $id } }) {
              term_id
            }
          }
        }
        predicate_id
      }
      aggregate {
        count
      }
    }
  }
}

query GetAtomsByCreator($address: String!) {
  atoms(where: { creator: { id: { _eq: $address } } }) {
    term_id
    data
    image
    label
    type
    block_number
    block_timestamp
    transaction_hash
    creator_id
    value {
      thing {
        name
        image
        description
        url
      }
    }
    term {
      vaults {
        position_count
      }
      total_market_cap
    }

    as_subject_triples_aggregate {
      nodes {
        predicate {
          label
          term_id
        }
        object {
          label
          term_id
        }
      }
    }
  }
}
