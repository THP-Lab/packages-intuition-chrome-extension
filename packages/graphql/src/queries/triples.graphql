# Main pagination query
query GetTriplesByCreator($address: String) {
  triples(where: { creator_id: { _eq: $address } }) {
    term_id
    creator_id
    subject {
      term_id
      label
      image
      type
    }
    predicate {
      term_id
      label
      image
      type
    }
    object {
      term_id
      label
      image
      type
    }
    positions_aggregate {
      aggregate {
        count
      }
    }
    counter_positions_aggregate {
      aggregate {
        count
      }
    }
  }
}
query GetTriples(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
) {
  total: triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  triples(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    ...TripleMetadata
    ...TripleTxn
    ...TripleVaultDetails
    creator {
      ...AccountMetadata
    }
  }
}

# Combined query with aggregates and nodes
query GetTriplesWithAggregates(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
) {
  triples_aggregate(
    limit: $limit
    offset: $offset
    order_by: $orderBy
    where: $where
  ) {
    aggregate {
      count
    }
    nodes {
      ...TripleMetadata
      ...TripleTxn
      ...TripleVaultDetails
      creator {
        ...AccountMetadata
      }
    }
  }
}

query GetTriplesCount($where: triples_bool_exp) {
  triples_aggregate(where: $where) {
    total: aggregate {
      count
    }
  }
}

query GetTriple($tripleId: numeric!) {
  triple(term_id: $tripleId) {
    ...TripleMetadata
    ...TripleTxn
    ...TripleVaultDetails
    creator {
      ...AccountMetadata
    }
  }
}

query GetAtomTriplesWithPositions($where: triples_bool_exp) {
  triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
}

query GetTriplesWithPositions(
  $limit: Int
  $offset: Int
  $orderBy: [triples_order_by!]
  $where: triples_bool_exp
  $address: String
) {
  total: triples_aggregate(where: $where) {
    aggregate {
      count
    }
  }
  triples(limit: $limit, offset: $offset, order_by: $orderBy, where: $where) {
    term_id
    counter_term_id
    subject {
      term_id
      label
      image
    }
    predicate {
      term_id
      label
      image
    }
    object {
      term_id
      label
      image
    }
    term {
      vaults {
        total_shares
        position_count
        positions(where: { account_id: { _eq: $address } }) {
          account {
            id
            label
            image
          }
          shares
        }
      }
    }
    counter_term {
      vaults {
        total_shares
        position_count
        positions(where: { account_id: { _eq: $address } }) {
          account {
            id
            label
            image
          }
          shares
        }
      }
    }
  }
}
