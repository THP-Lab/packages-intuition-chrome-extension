FROM docker.io/node:lts-alpine as base

ARG API_KEY=${API_KEY}
ARG API_URL=${API_URL}
ARG HASURA_POINTS_ENDPOINT=${HASURA_POINTS_ENDPOINT}
ARG HASURA_POINTS_SECRET=${HASURA_POINTS_SECRET}
ARG HASURA_PROJECT_ENDPOINT=${HASURA_PROJECT_ENDPOINT}
ARG PRIVY_APP_ID=${PRIVY_APP_ID}
ARG PRIVY_APP_SECRET=${PRIVY_APP_SECRET}
ARG PRIVY_VERIFICATION_KEY=${PRIVY_VERIFICATION_KEY}
ARG WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
ARG ORIGIN_URL=${ORIGIN_URL}
ARG VITE_DEPLOY_ENV=${VITE_DEPLOY_ENV}
ARG VITE_HASURA_POINTS_ENDPOINT=${VITE_HASURA_POINTS_ENDPOINT}

ENV API_KEY=${API_KEY}
ENV API_URL=${API_URL}
ENV HASURA_POINTS_ENDPOINT=${HASURA_POINTS_ENDPOINT}
ENV HASURA_POINTS_SECRET=${HASURA_POINTS_SECRET}
ENV HASURA_PROJECT_ENDPOINT=${HASURA_PROJECT_ENDPOINT}
ENV PRIVY_APP_ID=${PRIVY_APP_ID}
ENV PRIVY_APP_SECRET=${PRIVY_APP_SECRET}
ENV PRIVY_VERIFICATION_KEY=${PRIVY_VERIFICATION_KEY}
ENV WALLETCONNECT_PROJECT_ID=${WALLETCONNECT_PROJECT_ID}
ENV ORIGIN_URL=${ORIGIN_URL}
ENV VITE_DEPLOY_ENV=${VITE_DEPLOY_ENV}
ENV VITE_HASURA_POINTS_ENDPOINT=${VITE_HASURA_POINTS_ENDPOINT}
WORKDIR /app

COPY package.json \
    project.json \
	tsconfig* \
	nx.json \
	pnpm*.yaml \
    .eslintrc.base.cjs \
    .verdaccio \
	./
COPY apps/launchpad ./apps/launchpad
COPY packages ./packages

RUN apk add --no-cache \
	python3 \
	make \
	gcc \
	g++

RUN npm install -g pnpm@9.0.6

FROM base as build
RUN npm add --global nx@latest
RUN pnpm i
RUN pnpm run launchpad:build

FROM base
COPY --from=build /app /app
ENV NX_REJECT_UNKNOWN_LOCAL_CACHE=0
ENV PORT=3000
ENV HOST=0.0.0.0

EXPOSE 3000
CMD [ "pnpm", "run", "launchpad:start" ]
